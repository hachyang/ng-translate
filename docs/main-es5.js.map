{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","STI","str","AppComponent","translate","messageBoxContent","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","language","selector","templateUrl","styleUrls","AppModule","forRoot","loader","provide","useFactory","HttpLoaderFactory","deps","declarations","imports","providers","bootstrap","http","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n//import {_} from '@biesbjerg/ngx-translate-extract/dist/utils/utils';\n//import defaultLanguage from \"./../assets/i18n/en-US.json\";\nexport function STI(str: string) {\n  return str;\n}\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    messageBoxContent = STI('demo.title');\n    constructor(public translate: TranslateService) {\n        //translate.setDefaultLang('en');\n    //translate.setTranslation('en-US', defaultLanguage);\n    translate.addLangs(['en-US', 'de-DE', 'zh-CN']);\n    translate.setDefaultLang('en-US');\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/de|de-DE/) ? 'de-DE' : 'en-US');\n    }\n    useLanguage(language: string) {\n      this.translate.use(language);\n  }\n}\n","<div>\n  <!-- translation: translation pipe -->\n  <h1>{{ 'demo.title' | translate }}</h1>\n  <label>\n    {{ 'demo.select' | translate }}\n    <select #langSelect (change)=\"translate.use(langSelect.value)\">\n      <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\" [selected]=\"lang === translate.currentLang\" translate >{{ lang }}</option>\n    </select>\n  </label>\n</div>\n\n<div>\n  <!-- translation: directive (key as attribute)-->\n  <p [translate]=\"'demo.text'\"></p>\n\n  <!-- translation: directive (key as content of element) -->\n  <p translate>demo.text</p>\n</div>\n<!-- translation: translation pipe -->\n<p>{{ 'demo.greeting' | translate:{name:'Andreas'} }}</p>\n\n<!-- translation: directive (key as attribute) -->\n<p [translate]=\"'demo.greeting'\" [translateParams]=\"{name: 'Andreas'}\"></p>\n\n<!-- translation: directive (key as content of element)-->\n<p translate [translateParams]=\"{name: 'Andreas'}\">demo.greeting</p>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// import ngx-translate and the http loader\nimport {TranslateCompiler,TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n// import ngx-translate-messageformat-compiler\n//import {TranslateMessageFormatCompiler} from 'ngx-translate-messageformat-compiler';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n\n        // ngx-translate and the loader module\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            },\n\n        })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/',\n    '.json');\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}