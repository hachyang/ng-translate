{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n//import {_} from '@biesbjerg/ngx-translate-extract/dist/utils/utils';\n//import defaultLanguage from \"./../assets/i18n/en-US.json\";\nexport function STI(str: string) {\n  return str;\n}\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    messageBoxContent = STI('demo.title');\n    constructor(public translate: TranslateService) {\n        //translate.setDefaultLang('en');\n    //translate.setTranslation('en-US', defaultLanguage);\n    translate.addLangs(['en-US', 'de-DE', 'zh-CN']);\n    translate.setDefaultLang('en-US');\n\n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang.match(/de|de-DE/) ? 'de-DE' : 'en-US');\n    }\n    useLanguage(language: string) {\n      this.translate.use(language);\n  }\n}\n","<div>\n  <!-- translation: translation pipe -->\n  <h1>{{ 'demo.title' | translate }}</h1>\n  <label>\n    {{ 'demo.select' | translate }}\n    <select #langSelect (change)=\"translate.use(langSelect.value)\">\n      <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\" [selected]=\"lang === translate.currentLang\" translate >{{ lang }}</option>\n    </select>\n  </label>\n</div>\n\n<div>\n  <!-- translation: directive (key as attribute)-->\n  <p [translate]=\"'demo.text'\"></p>\n\n  <!-- translation: directive (key as content of element) -->\n  <p translate>demo.text</p>\n</div>\n<!-- translation: translation pipe -->\n<p>{{ 'demo.greeting' | translate:{name:'Andreas'} }}</p>\n\n<!-- translation: directive (key as attribute) -->\n<p [translate]=\"'demo.greeting'\" [translateParams]=\"{name: 'Andreas'}\"></p>\n\n<!-- translation: directive (key as content of element)-->\n<p translate [translateParams]=\"{name: 'Andreas'}\">demo.greeting</p>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n// import ngx-translate and the http loader\nimport {TranslateCompiler,TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n// import ngx-translate-messageformat-compiler\n//import {TranslateMessageFormatCompiler} from 'ngx-translate-messageformat-compiler';\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n\n        // ngx-translate and the loader module\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            },\n\n        })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, './assets/i18n/',\n    '.json');\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}